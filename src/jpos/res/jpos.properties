#------------------------------------------------------------------------------
# JposTestCase.createPropFile() --> ./jpos/res/jpos.properties file
# Thu Jul 05 11:37:25 EDT 2001
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Required properties
# -------------------
# 1) jpos.loader.serviceManagerClass
#
# 	 This property specifies the manager bootstrap class for the whole JCL.  Use
#    this property to replace the default "simple" JCL implementation with your
#    own.  The value must be a fully qualified class name that implements the
#    interface jpos.loader.JposServiceManager
#
# 2) jpos.config.regPopulatorClass
#
#    This property specifies the registry populator class---that populates the
#    entry registry.  It must be a fully qualified class name that implements
#    the jpos.config.JposRegPopulator interface.  If you want to specify 
#    multiple populators then you should instead use the:
#    jpos.config.populator.class.<n>
#    property---defined below---that allows you to specify many populators
#    There are 3 populators that are provided with the JCL by default:
#    a) jpos.config.simple.SimpleRegPopulator
#       This populator loads/saves JposEntry objects as serialized objects in
#       a Java serialized file, typically named: jpos.cfg
#    b) jpos.config.simple.xml.XercesRegPopulator 
#       This populator uses Xerces and implements an XML parser according to
#       the jpos/res/jcl.dtd.  By default, the XML file must be named jpos.xml
#       However, this named can be changed using the property (see below):
#		jpos.config.populator.file.<n>
#    c) jpos.config.simple.xml.Xerces2RegPopulator
#       This populator uses Xerces2 and implements an XML parser according to
#       the jpos/res/jcl.xsd XML schema.  The file name is same as above; however,
#       since this parser expects an XML schema, the XML file header is different.
#       See the jpos-schema.xml file.
# 
# NOTE: Xerces and Xerces2 are XML parsers from the http://www.apache.org 
#       Jakarta projects.
#------------------------------------------------------------------------------

jpos.loader.serviceManagerClass=jpos.loader.simple.SimpleServiceManager

#jpos.config.regPopulatorClass=jpos.config.simple.SimpleRegPopulator
jpos.config.regPopulatorClass=jpos.config.simple.xml.SimpleXmlRegPopulator
#jpos.config.regPopulatorClass=com.floreantpos.test.MyJPOSPopulator
#jpos.config.regPopulatorClass=jpos.config.simple.xml.Xerces2RegPopulator

#------------------------------------------------------------------------------
# Use this property to for the JCL to load a specific file (cfg or XML)
# when not using multiple populators via the jpos.config.populator.class.<n>
# multi-property
#------------------------------------------------------------------------------

#jpos.config.populatorFile=jpos1.cfg
jpos.config.populatorFile=jpos.xml

#------------------------------------------------------------------------------
# To define multiple populator then comment the property 
# "jpos.config.regPopulatorClass"
# and use the following multiproperty properties (defines 2 populators one 
# XML and one serialized)
#------------------------------------------------------------------------------

#jpos.config.populator.class.0=jpos.config.simple.xml.SimpleXmlRegPopulator
#jpos.config.populator.class.1=jpos.config.simple.SimpleRegPopulator

#------------------------------------------------------------------------------
# You can also define populator files for each populator as follows
#------------------------------------------------------------------------------

#jpos.config.populator.file.0=jpos0.xml
#jpos.config.populator.file.1=jpos1.cfg

#------------------------------------------------------------------------------
# Tracing properties
# ------------------
# All tracing properties that are boolean attributes can be turned on of
# off using ON/on/TRUE/true or OFF/false for any other value.
# The available properties are (see commented properties below):
# 1) jpos.tracing	
# This is a legacy property and will turn the global tracer on.  You should
# note that it is preferable to use the named tracing property instead
# 2) jpos.util.tracing.TurnOnAllNamedTracers
# This property when turned on will enable all named tracers.  A named tracer
# will print out a message prepended by [<name>] where <name> is the name of
# the tracer in question.
# 3) jpos.util.tracing.TurnOnNamedTracers = name1, name2, ...
# This will turn on the named tracers listed as name1, name2, ... this is 
# useful if when all named tracers are on you want to filter the output
#------------------------------------------------------------------------------

#jpos.tracing=ON
#jpos.util.tracing.TurnOnNamedTracers=XercesRegPopulator, AbstractRegPopulator, MainFrame
#jpos.util.tracing.TurnOnNamedTracers=JposServiceLoader,SimpleEntryRegistry,SimpleRegPopulator,XercesRegPopulator 
#jpos.util.tracing.TurnOnAllNamedTracers=OFF